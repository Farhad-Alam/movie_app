{"version":3,"sources":["components/Axios.js","components/Row.js","components/Requests.js","components/Nav.js","components/Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeMenu","useState","movies","setmovies","trailerUrl","settrailerUrl","fecthData","a","get","request","data","results","useEffect","console","table","className","map","movie","elem","x","id","poster_path","name","original_title","backdrop_path","overview","vote_average","back","onClick","movieTrailer","original_name","then","url","fullUrl","URLSearchParams","URL","search","catch","err","log","handleClick","src","alt","length","substr","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Nav","show","setshow","window","addEventListener","scrollY","Banner","setdata","fetchData","randomNum","Math","floor","random","style","backgroundSize","backgroundImage","backgroundPosition","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c7ba212.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport instance from \"./Axios\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst baseURl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeMenu }) => {\r\n  const [movies, setmovies] = useState([]);\r\n  const [trailerUrl, settrailerUrl] = useState(\"\");\r\n\r\n  const fecthData = async () => {\r\n    const request = await instance.get(fetchUrl);\r\n\r\n    setmovies(request.data.results);\r\n  };\r\n\r\n  // useEffect prop\r\n\r\n  useEffect(() => {\r\n    fecthData();\r\n  }, [fetchUrl]);\r\n\r\n  function truncate(elem, x) {\r\n    return elem?.length > x ? elem.substr(0, x - 1) + \"â€¦\" : elem;\r\n  }\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      settrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || movie?.original_name || movie?.original_title ||movie?.title || \"\")\r\n        .then((url) => {\r\n          const fullUrl = new URLSearchParams(new URL(url).search);\r\n          settrailerUrl(fullUrl.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  console.table(movies);\r\n\r\n  return (\r\n    <div className={`movies_sec text-center ${isLargeMenu && \"hero\"} `}>\r\n      <h1> {title}</h1>\r\n\r\n      <div className={`movies_info mt-1 `}>\r\n        {movies.map((movie) => {\r\n          const {\r\n            id,\r\n            poster_path,\r\n            name,\r\n            original_title,\r\n            backdrop_path,\r\n            overview,\r\n            vote_average,\r\n          } = movie;\r\n          const back = backdrop_path ? backdrop_path : poster_path;\r\n          return (\r\n            <div key={id}>\r\n              <div className=\"m_img\">\r\n                <img\r\n                  onClick={() => handleClick(movie)}\r\n                  className={`my-3 mt-0 movies_img ${isLargeMenu && \"m_trend\"} \r\n               mx-3`}\r\n                  src={`${baseURl}${isLargeMenu ? poster_path : back} `}\r\n                  alt=\"name\"\r\n                />\r\n                <div\r\n                  className={`info_list d-flex align-items-center ${\r\n                    isLargeMenu && \"l_list\"\r\n                  }`}\r\n                >\r\n                  <div className=\"info\">\r\n                    <p className=\"fw-bold mb-0\">{movie?.title || name || original_title}</p>\r\n                    <p className=\"mt-1\">{truncate(overview, 70)}</p>\r\n                    <p className=\"mt-3 d-flex justify-content-end fs-4\">\r\n                      {vote_average}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","// tmbd img datbase::\r\nexport const img = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst API_KEY = \"d879ae2a648702d74576a62afa846744\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport RestaurantMenuIcon from \"@material-ui/icons/RestaurantMenu\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nconst Nav = () => {\r\n  const [show, setshow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 200) {\r\n        setshow(!show);\r\n      } else {\r\n        setshow(show);\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"show\"} `}>\r\n      <div className=\"nav_info p-3 d-flex justify-content-between\">\r\n        <img src=\"img/net.png\" alt=\"name\" />\r\n        <MenuOpenIcon className=\"nav_icon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { MuiThemeProvider } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport instance from \"./Axios\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst baseURl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nconst Banner = ({ fetchUrl }) => {\r\n  const [data, setdata] = useState([]);\r\n  const [trailerUrl, settrailerUrl] = useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    const request = await instance.get(fetchUrl);\r\n    const randomNum = Math.floor(\r\n      Math.random() * request.data.results.length - 1\r\n    );\r\n    setdata(request.data.results[randomNum]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(elem, x) {\r\n    return elem?.length > x ? elem.substr(0, x - 1) + \"â€¦\" : elem;\r\n  }\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      settrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(\r\n        movie?.name ||\r\n          movie?.original_name ||\r\n          movie?.original_title ||\r\n          movie?.title ||\r\n          \"\"\r\n      )\r\n        .then((url) => {\r\n          const fullUrl = new URLSearchParams(new URL(url).search);\r\n          settrailerUrl(fullUrl.get(\"v\"));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"banner text-white\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage: `url(${baseURl}${data?.backdrop_path})`,\r\n          backgroundPosition: \"center 0rem\",\r\n        }}\r\n      >\r\n        <div className=\"banner_info px-4\">\r\n          <h1 className=\"overview\">{data?.title || data?.original_name}</h1>\r\n          <div className=\"btn_container mb-3\">\r\n            <button\r\n              className=\"button rounded\"\r\n              onClick={() => {\r\n                handleClick(data);\r\n              }}\r\n            >\r\n              Play\r\n            </button>\r\n            <button className=\"button rounded\">My List</button>\r\n          </div>\r\n          <p className=\"overview \">{truncate(data.overview, 130)}</p>\r\n        </div>\r\n\r\n        <div className=\"fadein\"></div>\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\nimport Row from \"./components/Row\";\nimport requests from \"./components/Requests\";\nimport Nav from \"./components/Nav\";\nimport Banner from \"./components/Banner\";\n\nconst App = () => {\n  return (\n    <div>\n      <Nav />\n      <Banner  fetchUrl={requests.fetchTrending} />\n\n      <Row\n        title={\"NETFLIX ORIGINALS\"}\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeMenu\n      />\n      <Row title={\"Trending Movies\"} fetchUrl={requests.fetchTrending} />\n      <Row title={\"Horror Movies\"} fetchUrl={requests.fetchHorrorMovies} />\n      <Row title={\"TopRated Movies\"} fetchUrl={requests.fetchTopRated} />\n      <Row title={\"Action Movies\"} fetchUrl={requests.fetchActionMovies} />\n      <Row title={\"Comedy Movies\"} fetchUrl={requests.fetchComedyMovies} />\n      <Row title={\"Romance Movies\"} fetchUrl={requests.fetchRomanceMovies} />\n      <Row title={\"Documentaries\"} fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}